{"version":3,"sources":["webpack:///src/app/auth/_services/dataCountry.service.ts"],"names":["API_URL","DataCountryService","http","get","id","pipe","res","providedIn"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,uD,CAQA;;;AACA,QAAMA,OAAO,GAAG,iCAAhB;;QAKaC,kB;;;AAMX,kCAAoBC,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAAqB;;;;2CAEzB;AACd,iBAAO,KAAKA,IAAL,CAAUC,GAAV,CAAcH,OAAO,GAAG,eAAxB,CAAP;AACD;;;4CACmBI,E,EAAS;AAC3B,iBAAO,KAAKF,IAAL,CAAUC,GAAV,CAAcH,OAAO,2BAAoBI,EAApB,CAArB,EACNC,IADM,CAEH,2DAAI,UAAAC,GAAG;AAAA,mBAAIA,GAAG,CAAC,CAAD,CAAP;AAAA,WAAP,CAFG,CAEgB;AAFhB,WAAP;AAID;;;oDACwB;AACvB,iBAAO,KAAKJ,IAAL,CAAUC,GAAV,CAAcH,OAAO,GAAG,2BAAxB,CAAP;AACD;;;mDACuB;AACtB,iBAAO,KAAKE,IAAL,CAAUC,GAAV,CAAcH,OAAO,GAAG,0BAAxB,CAAP;AACD;;;;;;;uBAtBUC,kB,EAAkB,uH;AAAA,K;;;aAAlBA,kB;AAAkB,eAAlBA,kBAAkB,K;AAAA,kBAFjB;;;;;sEAEDA,kB,EAAkB;cAH9B,wDAG8B;eAHnB;AACVM,oBAAU,EAAE;AADF,S;AAGmB,Q","file":"common-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { CountryFormatMap } from '../../model/country-format-map';\nimport { DataCountry } from '../../model/data-country'\nimport { CountryTreeGrid } from '../../model/country-tree-grid';\nimport { map } from 'rxjs/operators';\n\n//const API_URL = 'http://covid-map-2020-back-end.herokuapp.com/api/test/';\nconst API_URL = 'http://localhost:8080/api/test/';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataCountryService {\n  dataCountries: DataCountry[];\n  dataCountrieById:DataCountry;\n  dataCountriesFormatMap: CountryFormatMap;\n  dataCountriesTreeGrid: CountryTreeGrid;\n\n  constructor(private http: HttpClient) { }\n\n  getDataCountries(): Observable<any> {\n    return this.http.get(API_URL + 'dataCountries');\n  }\n  getDataCountrieById(id:number): Observable<any> {\n    return this.http.get(API_URL + `dataCountries/${id}`)\n    .pipe(\n        map(res => res[0]) // or any other operator\n      )\n  }\n  getDataCountriesFormatMap(): Observable<any> {\n    return this.http.get(API_URL + 'getDataCountriesFormatMap');\n  }\n  getDataCountriesTreeGrid(): Observable<any> {\n    return this.http.get(API_URL + 'getDataCountriesTreeGrid');\n  }\n}\n"]}